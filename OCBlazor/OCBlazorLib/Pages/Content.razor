@page "/content/{alias}"
@attribute [StreamRendering]
@using OrchardCore.ContentManagement.Models
@inject IContentHandleManager handleManager
@inject IContentManager contentManager
@inject ISiteService SiteService

@if (ContentItem == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<PageTitle>@ContentItem.DisplayText - @Site.SiteName</PageTitle>

	<h1>@ContentItem.DisplayText</h1>
	@((MarkupString)Markup)

}
@code
{
	[ParameterAttribute]
	public string Alias { get; set; }

	protected ContentItem ContentItem { get; set; }
	protected string Markup { get; set; }
	protected ISite Site { get; set; }

	protected override async Task OnInitializedAsync()
	{
		Site = await SiteService.GetSiteSettingsAsync();
		await Task.Delay(500);
	}

	protected override async Task OnParametersSetAsync()
	{
		string id = await handleManager.GetContentItemIdAsync($"alias:{Alias}");
		ContentItem = await contentManager.GetAsync(id, VersionOptions.Published);
		var bodyAspect = await contentManager.PopulateAspectAsync<BodyAspect>(ContentItem);
		Markup = bodyAspect.Body.ToString();
	}
}